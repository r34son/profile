name: Lighthouse CI

on:
  deployment_status:

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    if: github.event.deployment_status.state == 'success' && startsWith(github.event.deployment_status.environment, 'PR')

    steps:
      - uses: actions/checkout@v4.1.1

      - name: Audit URLs using Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@10.1.0
        with:
          urls: ${{ github.event.deployment_status.environment_url }}
          configPath: '.lighthouserc.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}

            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))

            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'

            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')

              core.setOutput("comment", comment);

      - name: Add comment to PR
        uses: marocchino/sticky-pull-request-comment@v2.8.0
        with:
          number: ${{ github.event.workflow_run.pull_requests[0].number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
