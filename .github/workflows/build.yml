name: Build and push docker image

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: Environment name
        type: string
    secrets:
      YC_SA_JSON_CREDENTIALS:
        description: Json, содержащий авторизованные ключи для сервисного аккаунта. Подробнее https://cloud.yandex.ru/docs/container-registry/operations/authentication#sa-json
      DOCKER_REGISTRY_PATH:
      AWS_S3_BUCKET:
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      SENTRY_AUTH_TOKEN:
    outputs:
      docker_image:
        description: Полное имя (тег) собранного docker-образа
        value: ${{ jobs.build-push.outputs.docker-image-version }}

env:
  S3_PATH: ${{ github.event_name == 'pull_request' && format('pr/{0}', github.event.pull_request.number) || 'production' }}

jobs:
  # Сборка и публикация docker-образа
  build-push:
    name: Image
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    outputs:
      docker-image-version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_REGISTRY_PATH }}
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Login to Yandex Cloud Container Registry
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      # https://docs.docker.com/build/ci/github-actions/cache/
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        uses: docker/build-push-action@v5
        with:
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=registry,ref=${{ secrets.DOCKER_REGISTRY_PATH }}:latest
          # cache-to: type=inline
          build-args: |
            ENV=${{ inputs.environment }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            ASSET_PREFIX=https://${{ format('storage.yandexcloud.net/{0}', secrets.AWS_S3_BUCKET) }}/${{ env.S3_PATH }}

  upload-static:
    name: Upload static to S3
    needs: build-push
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest

    steps:
      - name: Login to Yandex Cloud Container Registry
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Copy static files from docker image
        run: |
          docker pull ${{ secrets.DOCKER_REGISTRY_PATH }}:${{ needs.build-push.outputs.docker-image-version }}
          docker run -i --name helper ${{ secrets.DOCKER_REGISTRY_PATH }}:${{ needs.build-push.outputs.docker-image-version }} true
          docker cp helper:/app/.next .
          docker rm helper

      - name: Sync static assets to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ru-central1
        run: aws s3 --endpoint-url=https://storage.yandexcloud.net sync .next/static s3://${{ secrets.AWS_S3_BUCKET }}/${{ env.S3_PATH }}/_next/static
