name: Delete stage

on:
  workflow_call:
    inputs:
      stage_name:
        type: string
        required: true
        description: Имя удаляемого стенда
      environment:
        type: string
        required: true
        description: Окружение, в котором размещен удаляемый стенд
    secrets:
      YC_SA_JSON_CREDENTIALS:
        description: Json, содержащий авторизованные ключи для сервисного аккаунта. Подробнее https://cloud.yandex.ru/docs/container-registry/operations/authentication#sa-json
      DOCKER_REGISTRY_PATH:
      DEPLOY_SA_ID:
      FOLDER_ID:
      TF_STATE_AWS_ACCESS_KEY_ID:
      TF_STATE_AWS_SECRET_ACCESS_KEY:

jobs:
  destroy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      YC_SERVICE_ACCOUNT_KEY_FILE: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      TF_CLI_CONFIG_FILE: '${{ github.workspace }}/.github/files/terraformrc'
      TF_VAR_name_prefix: ${{ inputs.stage_name }}
      TF_VAR_folder_id: ${{ secrets.FOLDER_ID }}
      TF_VAR_service_account_id: ${{ secrets.DEPLOY_SA_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.TF_STATE_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.TF_STATE_AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3

      - name: Terraform setup
        uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 # v3.0.0
        with:
          terraform_version: '1.7.1'
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: deploy/app
        run: terraform init -backend-config="key=${{ inputs.stage_name }}/terraform.tfstate"

      - name: Terraform Destroy
        working-directory: deploy/app
        run: terraform destroy -auto-approve
        env:
          # https://github.com/hashicorp/terraform/issues/23552
          TF_VAR_image_url: ''

      - name: Make deployments inactive
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          ENVIRONMENT: ${{ inputs.environment }}
        with:
          script: |
            const deployments = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              environment: process.env.ENVIRONMENT,
              ref: context.payload.pull_request.head.ref,
              task: 'deploy',
            });

            await Promise.all([deployments.data.map(({ id }) => github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: id,
              state: 'inactive',
            }))])
